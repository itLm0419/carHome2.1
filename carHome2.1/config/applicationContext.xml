<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	                      http://www.springframework.org/schema/beans/spring-beans.xsd
		                 http://www.springframework.org/schema/aop
		                http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		               http://www.springframework.org/schema/context 
		              http://www.springframework.org/schema/context/spring-context-3.1.xsd 
		             http://www.springframework.org/schema/tx 
		            http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">
		<!-- 配置属性文件位置 -->
		<context:property-placeholder location="classpath:db.properties"/>
		<!-- 配置自动扫描包路径 -->
		<context:component-scan base-package="com.carhome.action,com.carhome.service,com.carhome.dao,com.carhome.spring" />
		<!-- 配置数据源 -->
		<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
			<property name="user" value="${jdbc.user}"></property>
			<property name="password" value="${jdbc.password}"></property>
			<property name="driverClass" value="${jdbc.driverClass}"></property>
			<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
			
			<property name="initialPoolSize" value="${jdbc.initialPoolSize}"></property>
			<property name="maxPoolSize" value="${jdbc.maxPoolSize}"></property>
		</bean>
		<!--配置sessionFactory  -->
		<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
			<property name="dataSource" ref="dataSource"></property>
			<!-- hibernate配置文件路径 -->
			<property name="configLocation" value="classpath:hibernate.cfg.xml"></property>
			<!-- hibernate映射文件路径 -->
			<property name="mappingLocations" value="classpath:com/carhome/vo/*.hbm.xml"></property>
			<!-- 该方式为独立集成，感觉这种方式不舒服，用的是引入集成 -->
			<!-- <property name="hibernateProperties">
				<props>
					<prop key="hibernate.dialect">
						org.hibernate.dialect.MySQL5InnoDBDialect
					</prop>
					<prop key="hibernate.show_sql">
						false
					</prop>
					<prop key="hibernate.format_sql">
						true
					</prop>
					<prop key="hibernate.hbm2ddl.auto">
						update
					</prop>
				</props>
			</property> -->
		</bean>
		<!-- 配置事务管理 -->
		<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
			<property name="sessionFactory" ref="sessionFactory"></property>
		</bean>
		<!-- 配置通知 -->
		<tx:advice id="txAdvice">
			<tx:attributes>
				<tx:method name="get*" read-only="true"/>
				<tx:method name="*"/>
			</tx:attributes>
		</tx:advice>
		<!-- 配置aop -->
		<aop:config>
			<aop:pointcut expression="execution(* com.carhome.service.*.*(..))"
				 id="txPointcut"/>
			<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
		</aop:config>
</beans>